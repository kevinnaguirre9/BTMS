<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js" integrity="sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.0/dist/chart.min.js" integrity="sha256-yz7K02nILYEeRDwEfzu/1zI9SpBKod/nLYMTFh7vszs=" crossorigin="anonymous"></script>
<script src="/js/index.js"></script>


<!--Dashboard - JS/ -->
<script>
  let arrow = document.querySelectorAll(".arrow");
  for (var i = 0; i < arrow.length; i++) {
    arrow[i].addEventListener("click", (e)=> {
      let arrowParent = e.target.parentElement.parentElement;//selecting main parent of arrow
      arrowParent.classList.toggle("showMenu");
    });
  }
</script>


<!--Dashboard - JS/ -->  
<script>
  if(window.location.pathname === '/user/home') {
    const options = {
      method: 'GET',
      headers: {
          'Content-Type': 
              'application/json;charset=utf-8'
      }        
    }

    const fetchRes = fetch('http://localhost:4000/btm/measurements?todayMeasurements=true', options);

    fetchRes
      .then(res => res.json())
      .then(resData => {
        const count = [resData.stats.high, resData.stats.normal, resData.stats.low];
        const data = {
          labels: ['Alta (mayor a 37.5 °C)', 'Normal (entre 36 °C y 37 °C)', 'Baja (menor a 36 °C)'],
          datasets: [{
            label: 'Measurements Basic Statistics',
            data: count,
            backgroundColor: ['rgb(255, 99, 132)', 'rgb(75, 192, 192)', 'rgb(255, 205, 86)']
          }]
        };
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
          type: 'polarArea',
          data: data,
          options: {
            animations: {
              tension: {
                duration: 8000,
                easing: 'polarArea',
                from: 1,
                to: 0,
                loop: true
              }
            },
            scales: {
              y: { // defining min and max so hiding the dataset does not change scale range
                min: 0,
                max: 100
              }
            }
          }
        });

        const bodyTemps = resData.stats.bodyTemps
        
        const totalBtm = bodyTemps.length;
        const maxBtm = Math.max(...bodyTemps);
        const minBtm = Math.min(...bodyTemps);

        const arrAvg = arr => arr.reduce((a,b) => a + b, 0) / arr.length
        const meanBt = +arrAvg(bodyTemps).toFixed(2);

        $('#totalBt').text(totalBtm);
        $('#maxBt').text(Number.isFinite(maxBtm) ? `${maxBtm} °C` : '-');
        $('#minBt').text(Number.isFinite(minBtm) ? `${minBtm} °C` : '-');
        $('#meanBt').text(!(Number.isNaN(meanBt)) ? `${meanBt} °C` : '-');

      });
  }  

</script>

</body>
</html>